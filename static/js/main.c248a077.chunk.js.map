{"version":3,"sources":["assets/heroku.svg","assets/redux.svg","assets/react.svg","assets/fotoPessoal.jpg","assets/github.svg","assets/linkedin.svg","assets/ecommerce.png","assets/firebase.svg","assets/stripe.svg","assets/job.png","assets/node.svg","components/links/links.components.jsx","components/apresentacao/apresentacao.component.jsx","components/descricao/descricao.component.jsx","components/ecommerce/ecommerce.component.jsx","components/job-search/job-search.component.jsx","components/projetos/projetos.component.jsx","components/footer/footer.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Links","white","className","href","rel","target","src","github","alt","linkedin","Apresentacao","style","backgroundImage","fotoPessoal","Descricao","nome","texto","logos","id","logomarca","reactLogo","reduxLogo","firebaseLogo","herokuLogo","stripeLogo","Ecommerce","ecommerceImage","map","logo","key","nodeLogo","JobSearch","jobSearchImage","Projetos","backgroundColor","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c248a077.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heroku.81c49462.svg\";","module.exports = __webpack_public_path__ + \"static/media/redux.33d43952.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.921ae835.svg\";","module.exports = __webpack_public_path__ + \"static/media/fotoPessoal.ce551d75.jpg\";","module.exports = __webpack_public_path__ + \"static/media/github.1bb02710.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.5b238434.svg\";","module.exports = __webpack_public_path__ + \"static/media/ecommerce.9154065b.png\";","module.exports = __webpack_public_path__ + \"static/media/firebase.e6163780.svg\";","module.exports = __webpack_public_path__ + \"static/media/stripe.e4590c1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/job.f42ca7fb.png\";","module.exports = __webpack_public_path__ + \"static/media/node.bcb694ab.svg\";","import React from 'react';\r\n\r\nimport './links.style.scss'\r\n\r\nimport github from '../../assets/github.svg'\r\nimport linkedin from '../../assets/linkedin.svg'\r\n\r\nexport const Links = ({ white }) => {\r\n    return(\r\n        <div className='links'>\r\n            <a href='https://github.com/brunolv6' rel=\"noopener noreferrer\" target=\"_blank\">\r\n                <img \r\n                    className={\r\n                        `${white? 'filtro-branco': ''}  \r\n                        links-item`\r\n                    } \r\n                    src={github} \r\n                    alt='github-logo'/>\r\n            </a>\r\n            <a href='https://www.linkedin.com/in/bruno-leme-valle-6blv/' rel=\"noopener noreferrer\" target=\"_blank\">\r\n                <img \r\n                    className={\r\n                        `${white? 'filtro-branco': ''}  \r\n                        links-item`\r\n                    } \r\n                    src={linkedin} \r\n                    alt='linkedin-logo'/>\r\n            </a>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './apresentacao.style.scss';\r\n//tem que estar fora de conchetes\r\nimport fotoPessoal from '../../assets/fotoPessoal.jpg';\r\n\r\nimport { Links } from '../links/links.components'\r\n\r\nexport const Apresentacao = () => (\r\n    <div className='apresentacao'>\r\n        <div className='circulo-foto'>\r\n            <div\r\n                className='foto-pessoal'\r\n                style={{\r\n                    backgroundImage: `url(${fotoPessoal})`\r\n                }}\r\n            />\r\n        </div>\r\n        <div className='nome'>Bruno Valle</div>\r\n        <div className='profissao'>Desenvolvedor Front-End</div>\r\n        <Links/>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport './descricao.style.scss';\r\n\r\nexport const Descricao = ({ nome, texto }) => (\r\n    <div className='descricao'>\r\n        <div className='nome'>{nome}</div>    \r\n        <div className='texto'>{texto}</div>    \r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport './ecommerce.style.scss'\r\nimport ecommerceImage from '../../assets/ecommerce.png';\r\nimport herokuLogo from '../../assets/heroku.svg';\r\nimport firebaseLogo from '../../assets/firebase.svg';\r\nimport stripeLogo from '../../assets/stripe.svg';\r\nimport reduxLogo from '../../assets/redux.svg';\r\nimport reactLogo from '../../assets/react.svg';\r\n\r\nimport { Descricao } from '../descricao/descricao.component'\r\n\r\nconst logos = [\r\n    {\r\n        id: 1,\r\n        logomarca: reactLogo\r\n    },\r\n    {\r\n        id: 2,\r\n        logomarca: reduxLogo\r\n    },\r\n    {\r\n        id: 3,\r\n        logomarca: firebaseLogo\r\n    },\r\n    {\r\n        id: 4,\r\n        logomarca: herokuLogo\r\n    },\r\n    {\r\n        id: 5,\r\n        logomarca: stripeLogo\r\n    }\r\n]\r\n\r\nexport const Ecommerce = () => (\r\n    <div className='ecommerce'>\r\n        <div className='apresentacao-ecommerce'>\r\n            <Descricao\r\n                className='descricao' \r\n                nome='Ecommerce' \r\n                texto='Projeto pessoal de criação de um ecommerce de moda do layout ao deploy visando um código limpo, claro, organizado e com otima performance'\r\n            />\r\n            <img \r\n                className='imagem'\r\n                src={ecommerceImage} \r\n                alt='ecommerce'\r\n            />\r\n        </div>\r\n        <div className='ferramentas'>\r\n            {\r\n                logos.map(logo => (\r\n                    <img \r\n                        key={logo.id}\r\n                        className='logo'\r\n                        src={logo.logomarca} \r\n                        alt='logo'\r\n                    />        \r\n                ))\r\n            }\r\n        </div>\r\n        <a href='https://bruno-ecommerce-live.herokuapp.com/' rel=\"noopener noreferrer\" target=\"_blank\"><button className='botao'>Entre</button></a>\r\n    </div>\r\n)\r\n","import React from 'react';\r\n\r\nimport './job-search.style.scss';\r\nimport jobSearchImage from '../../assets/job.png';\r\nimport herokuLogo from '../../assets/heroku.svg';\r\nimport reduxLogo from '../../assets/redux.svg';\r\nimport reactLogo from '../../assets/react.svg';\r\nimport nodeLogo from '../../assets/node.svg';\r\n\r\nimport { Descricao } from '../descricao/descricao.component'\r\n\r\nconst logos = [\r\n    {\r\n        id: 1,\r\n        logomarca: nodeLogo\r\n    },\r\n    {\r\n        id: 2,\r\n        logomarca: reactLogo\r\n    },\r\n    {\r\n        id: 3,\r\n        logomarca: reduxLogo\r\n    },\r\n    {\r\n        id: 4,\r\n        logomarca: herokuLogo\r\n    }\r\n]\r\n\r\nexport const JobSearch = () => (\r\n    <div className='job-search'>\r\n        <div className='apresentacao-job-search'>\r\n            <Descricao\r\n                className='descricao' \r\n                nome='Job Search' \r\n                texto='Desenvolvimento de API de webscrapping em NodeJS que busca vagas em startups como iFood, Sympla, Wavy por área, e além disto faz busca específica no site vagas.com. Site responsivo com design simples e claro.'\r\n            />\r\n            <img \r\n                className='imagem'\r\n                src={jobSearchImage} \r\n                alt='job-search'\r\n            />\r\n        </div>\r\n        <div className='ferramentas'>\r\n            {\r\n                logos.map(logo => (\r\n                    <img \r\n                        key={logo.id}\r\n                        className='logo'\r\n                        src={logo.logomarca} \r\n                        alt='logo'\r\n                    />        \r\n                ))\r\n            }\r\n        </div>\r\n        <a href='https://bruno-ecommerce-live.herokuapp.com/' rel=\"noopener noreferrer\" target=\"_blank\"><button className='botao'>Entre</button></a>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport './projetos.style.scss'\r\n\r\nimport { Ecommerce } from '../ecommerce/ecommerce.component'\r\nimport { JobSearch } from '../job-search/job-search.component'\r\n\r\nexport const Projetos = () => (\r\n    <div className='projetos'>\r\n        <div className='gradiente1'></div>\r\n        <div style={{backgroundColor:'black'}}>\r\n            <Ecommerce/>\r\n        </div>\r\n        <div className='gradiente2'></div>\r\n        <div style={{backgroundColor:'white'}}>\r\n            <JobSearch/>\r\n        </div>\r\n        <div className='gradiente1'></div>\r\n    </div>\r\n)","import React from 'react'\r\n\r\nimport './footer.style.scss';\r\n\r\nimport { Links } from '../links/links.components'\r\n\r\nexport const Footer = () => (\r\n    <div className='footer'>\r\n        <div className='pergunta'>Quer me contratar ou bater um papo sobre um projeto seu?</div>\r\n        <div className='contato'>Entre em contato</div>\r\n        <Links white/>\r\n    </div>\r\n)","import React from 'react';\nimport './App.css';\n\n/* import Imagem from './components/imagem/imagem.component'; */\n\nimport { Apresentacao } from './components/apresentacao/apresentacao.component';\nimport { Projetos } from './components/projetos/projetos.component'\nimport { Footer } from './components/footer/footer.component';\n\nfunction App() {\n  return (\n    <div className='app'>\n      <Apresentacao/>\n      <Projetos/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}